<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\web\UploadedFile;

/**
 * This is the model class for table "ye_restaurant".
 *
 * @property int $id
 * @property string $name
 * @property string|null $start_time
 * @property string|null $end_time
 * @property string|null $phone
 * @property string|null $address
 * @property string|null $file_name
 * @property int|null $created_at
 * @property int|null $updated_at
 *
 * @property Product[] $products
 * @property RestaurantCat[] $restaurantCats
 */
class Restaurant extends \yii\db\ActiveRecord
{

    public $file;
    public $categories;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%restaurant}}';
    }

    public function behaviors()
    {
        return [TimestampBehavior::className()];
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name','phone', 'address', 'start_time', 'end_time'], 'required'],
            [['start_time', 'end_time'], 'safe'],
            [['file_name'], 'string'],
            [['categories'], 'integer']
//            [['start_time', 'end_time'], 'time'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'start_time' => 'Start Time',
            'end_time' => 'End Time',
            'phone' => 'Phone',
            'address' => 'Address',
            'file_name' => 'File Name',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProducts()
    {
        return $this->hasMany(Product::className(), ['rest_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRestaurantCats()
    {
        return $this->hasMany(RestaurantCat::className(), ['rest_id' => 'id']);
    }

    public function beforeSave($insert)
    {
        $file = UploadedFile::getInstance($this, 'file');


        if ($file) {
            if ($insert === false) {
                unlink(Yii::getAlias('@webroot') . '/uploads/' . $this->file_name);
            }

            $fileName = "{$file->baseName}_" . time() . ".{$file->extension}"; // $file->baseName - bu saqlanayotgan file nomini olib beradi. $file->extension - bu file ni kengaytmasini olib beradi misol uchun mp3, peg h.k.z
            $folder = Yii::getAlias('@webroot'); // web yoki public gacha bulgan yulni olib beradi
            $file->saveAs("{$folder}/uploads/{$fileName}");
            $this->file_name = $fileName;
        }

        return parent::beforeSave($insert);
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($insert === true) {
            $restaurantCat = new RestaurantCat();
            $restaurantCat->cat_id = $this->categories;
            $restaurantCat->rest_id = $this->id;
            $restaurantCat->save(false);
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

}
